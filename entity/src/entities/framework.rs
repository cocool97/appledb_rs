//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.10

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "framework")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub full_path: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::executable_framework::Entity")]
    ExecutableFramework,
}

impl Related<super::executable_framework::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ExecutableFramework.def()
    }
}

impl Related<super::executable_operating_system_version::Entity> for Entity {
    fn to() -> RelationDef {
        super::executable_framework::Relation::ExecutableOperatingSystemVersion.def()
    }
    fn via() -> Option<RelationDef> {
        Some(super::executable_framework::Relation::Framework.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
