//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.7

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "operating_system_version")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub version: String,
    pub operating_system_id: i32,
    pub device_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::device::Entity",
        from = "Column::DeviceId",
        to = "super::device::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Device,
    #[sea_orm(has_many = "super::executable_operating_system_version::Entity")]
    ExecutableOperatingSystemVersion,
    #[sea_orm(
        belongs_to = "super::operating_system::Entity",
        from = "Column::OperatingSystemId",
        to = "super::operating_system::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    OperatingSystem,
}

impl Related<super::device::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Device.def()
    }
}

impl Related<super::executable_operating_system_version::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ExecutableOperatingSystemVersion.def()
    }
}

impl Related<super::operating_system::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::OperatingSystem.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
